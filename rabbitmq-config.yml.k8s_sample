 rabbitmq-config.yml: |
    ---
    # Run auto discovery to find pods with label "app=rabbitmq"
    # https://docs.newrelic.com/docs/integrations/host-integrations/installation/container-auto-discovery
    discovery:
      command:
        # Use the following optional arguments:
        # --namespaces: Comma separated list of namespaces to discover pods on
        # --tls: Use secure (TLS) connection
        # --port: Port used to connect to the kubelet. Default is 10255
        exec: /var/db/newrelic-infra/nri-discovery-kubernetes
        match:
          label.app: rabbitmq
    integrations:
      - name: nri-rabbitmq
        env:
          # using the discovered IP as the hostname address
          HOSTNAME: ${discovery.ip}
          PORT: 15672
          USERNAME: <management UI username>
          PASSWORD: <management UI password>
          # NODE_NAME_OVERRIDE allows to generate the RabbitMQ Node entity.
          # Setting this avoids the integration to run a local command (rabbitmqctl) in order to
          # get the node name. The node name has to match exactly with the one set in the env var RABBITMQ_NODE_NAME
          # inside the RabbitMQ pod. For instance in bitnami charts this is defined as 
          # RABBITMQ_NODE_NAME=rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
          NODE_NAME_OVERRIDE: rabbit@${discovery.podName}.rabbitmq-headless.${discovery.namespace}.svc.cluster.local
          MANAGEMENT_PATH_PREFIX: <(Optional) rabbitmq management path prefix>
          CA_BUNDLE_DIR: <(Optional) ca bundle directory>
          CA_BUNDLE_FILE: <(Optional)ca bundle file>
          CONFIG_PATH: <(Optional) /path/to/config/file/rabbitmq.conf>
          USE_SSL: <(Optional) bool>
          QUEUES: <(Optional) json array of queue names to collect>
          QUEUES_REGEXES: <(Optional) json array of regexes, matching queue names will be collected>
          EXCHANGES: <(Optional) json array of exchange names to collect>
          EXCHANGES_REGEXES: <(Optional) json array of regexes, matching exchange names will be collected>
          VHOSTS: <(Optional) json array of vhost names to collect>
          VHOSTS_REGGEXES: <(Optional) json array of regexes, entities assigned to vhosts matching a regex will be collected>
        labels:
          env: production
          role: rabbitmq
